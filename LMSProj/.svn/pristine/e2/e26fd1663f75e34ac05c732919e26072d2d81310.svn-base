<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<!DOCTYPE html>
<html>
  <link rel="stylesheet" href="/resources/css/demo.css"/>
  <link rel="stylesheet" href="/resources/css/gridstack.min.css">
  <script type="text/javascript" src="/resources/js/jquery-3.6.0.js"></script>
  <script src="https://gridstackjs.com/node_modules/gridstack/dist/gridstack-all.js"></script>
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">

<title>메인페이지</title>

<script type="text/javascript" src="/resources/js/jquery-3.6.0.js"></script>
<script type="text/javascript">
function showPopup() { 
	window.open("/main/popupPortlet", "a", "width=1200, height=850, left=100, top=50"); 
}
</script>

<style type="text/css">
	.lock{
		border: 2px solid black;
		border-radius: 3%;
		width: 400px;
		height: 400px;
		display: inline-block;
		float: left;
		margin-right: 1%;
	}
	
	br{
		clear: both;
	}
	
	.main{
		margin: 0px, auto;
	}
	
	.stuInfo{
		height: 60%;
	}
	
	.stuSer{
		height: 30%;
	}
	
	.chat, .mail{
		width: 49%;
		display: inline-block;
		float: left;
		height: 100%;
	}
	.ptitle{
  	font-size : 1.3em;
  	float : left;
  }
  .removeBut{
  	float: right;
  }
  #ptable{
  	float: left;
  	border-collapse: collapse;
  }
</style>
<script type="text/javascript">
		function fn_mail(){
			window.open("/mail/mailAll");
		}
</script>
</head>
<body>
<!-- 학생페이지 -->
<!-- 
session.setAttribute("data", res);
session.setAttribute("mem", map);
 -->
<%-- ${sessionScope.mem.id} --%>
<div class="container-fluid main">
<div class="lock">
	<div class="stuInfo">
	
	</div>
	<hr>
	<div class="stuSer">
		<div class="chat">
		</div>
		<div class="mail">
			<div onclick="fn_mail()">메일</div>
		</div>
	</div>
	<br>
</div>
<div class="lock"></div>
<div class="lock"></div>
</div>
<br>
<!-- <button type="submit" onClick="location.href='logout'">로그아웃</button> -->

  <div class="container-fluid">
    <a onClick="saveGrid()" class="btn btn-primary" href="#">Save</a>
    <input type="button" class="btn btn-primary" value="팝업창 호출" onclick="showPopup()" />
    <br/><br/>
    <div id="gridCont"><div class="grid-stack"></div></div>
    <hr/>
    <div style="display:none">
    <textarea id="saved-data" cols="100" rows="20" readonly="readonly"></textarea>
    </div>
  </div>
</body>

  <script type="text/javascript">
  
    let grid = GridStack.init({
      minRow: 1, // don't let it collapse when empty
      cellHeight: '7rem'
    });
    
    grid.on('added removed change', function(e, items) {
      let str = '';
      items.forEach(function(item) {
    	  str += ' (x,y)=' + item.x + ',' + item.y  + '(w,h)=' + item.w +  ',' + item.h;
	      
      }

      );
      console.log(e.type + ' ' + items.length + ' items:' + str );
    });
    
    
	
    var RC001 = "";
	    RC001 += "<button class='removeBut' onClick = 'grid.removeWidget(this.parentNode.parentNode)'>X</button><br>";
	    RC001 += "<p class='ptitle'>학적변동조회</p><br><br><br>";
	    RC001 += "<table border='1' id='ptable'>";
	    RC001 += "<thead>";
	    RC001 += "<tr><th>년도/학기</th>";
	    RC001 += "<th>변동구분</th>";
	    RC001 += "<th>변동일자</th>";
	    RC001 += "<th>진행상태</th></tr>";
	    RC001 += "</thead>";
	    RC001 += "<tbody>";
	    RC001 += "<c:forEach var='history' items='${history}'>";
	    RC001 += "<tr><td>${history.recYr}/${history.recSem}</td>";
	    RC001 += "<td>${history.recRsn}</td>";
	    RC001 += "<td><fmt:formatDate value='${history.recDt}' pattern='yyyy.MM.dd' /></td>";
	    RC001 += "<c:if test='${history.recYn == 0}'>";
	    RC001 += "<td>승인대기</td></tr></c:if>";
	    RC001 += "<c:if test='${history.recYn == 1}'>";
	    RC001 += "<td>승인</td></tr></c:if>";
	    RC001 += "<c:if test='${history.recYn == 2}'>";
	    RC001 += "<td>반려</td></tr></c:if>";
	    RC001 += "</c:forEach>";
	    RC001 += "</tbody>";
	    RC001 += "</table>";
	
	var RC007 = ""
		RC007 += "<button class='removeBut' onClick = 'grid.removeWidget(this.parentNode.parentNode)'>X</button><br>"
		RC007 += "<p class='ptitle'>학사일정</p><br><br><br>"
		
	var RC004 = ""
		RC004 += "<button class='removeBut' onClick = 'grid.removeWidget(this.parentNode.parentNode)'>X</button><br>"
		RC004 += "<p class='ptitle'>수강신청 내역</p><br><br><br>"
	
	var RC011 = ""
		RC011 += "<button class='removeBut' onClick = 'grid.removeWidget(this.parentNode.parentNode)'>X</button><br>"
		RC011 += "<p class='ptitle'>뉴스</p><br><br><br>"
	
	var RC008 = ""
		RC008 += "<button class='removeBut' onClick = 'grid.removeWidget(this.parentNode.parentNode)'>X</button><br>"
		RC008 += "<p class='ptitle'>오늘의 대기/날씨</p><br><br><br>"
	
    var RC009 = ""
    	RC009 += "<button class='removeBut' onClick = 'grid.removeWidget(this.parentNode.parentNode)'>X</button><br>"
    	RC009 += "<p class='ptitle'>공지사항</p><br><br><br>"
	
		let serializedData = [
			<c:forEach var='list' items='${list}'>
				{x: ${list.poX}, y: ${list.poY}, w: ${list.poW}, h: ${list.poH}, id: '${list.poCate}', content: ${list.poCate}}, 	
			</c:forEach>
		];

    
  	/* serializedData.forEach((n, i) =>
   	n.content = `<button onClick="grid.removeWidget(this.parentNode.parentN ode)">X</button><br> ${i}<br> ${n.content ? n.content : ''}`);*/
  	
	$.each(serializedData, function(n, i){
  		n.content = `<button onClick="grid.removeWidget(this.parentNode.parentNode)">X</button><br> ${i}<br> ${n.content ? n.content : ''}`;
  	}) 
  	let serializedFull;

    // 2.x method - just saving list of widgets with content (default)
    loadGrid = function() {
      grid.load(serializedData, true); // update things
    }

    // 2.x method
    //Save 버튼 눌렀을때 onclick 이벤트
    saveGrid = function() {
      delete serializedFull;
      serializedData = grid.save();
      document.querySelector('#saved-data').value = JSON.stringify(serializedData, null, '  ');
		
		var memCd = 20170723;
		
		for(var i=0; i< serializedData.length; i++){
			serializedData[i].memCd = memCd;
		}

		let data = {"serializedData" : serializedData};
		
		console.log("serializedData : " + JSON.stringify(serializedData));
		
		$.ajax({
			url : '/main/portletSavePost',
			contentType : "application/json;charset=utf-8",
			data : JSON.stringify(serializedData),
			type : "post",
			success : function(result){
 				console.log("data : " + JSON.stringify(data));
 				console.log("result : " + JSON.stringify(result));
			}
		});
    }

    // 3.1 full method saving the grid options + children (which is recursive for nested grids)
    saveFullGrid = function() {
      serializedFull = grid.save(true, true);
      serializedData = serializedFull.children;
      document.querySelector('#saved-data').value = JSON.stringify(serializedFull, null, '  ');
    }

    // 3.1 full method to reload from scratch - delete the grid and add it back from JSON
    loadFullGrid = function() {
      if (!serializedFull) return;
      grid.destroy(true); // nuke everything
      grid = GridStack.addGrid(document.querySelector('#gridCont'), serializedFull);
    }

    clearGrid = function() {
      grid.removeAll();
    }

    loadGrid();
    
    grid.on('resize change', function(e, items){
    	let str = '';
    	items.forEach(function(item) {
    		str += ' (w,h)=' + item.w +  ',' + item.h;
    		if(item.w < 4 || item.h < 4){
   	    	  //alert("4보다 작아졌어요!");
  	      }
    	}
    	);
    	console.log(str);
    })
    
    
  </script>
  
  
</html>