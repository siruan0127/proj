<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.ac.lms.mapper.ApprovalMapper">

	
	<!-- resultmap설정해줘야함 -->
	<resultMap type="lecApplyVO" id="lecApplyMap">
		<result property="lecaCd" column="LECA_CD" />
		<result property="subCd" column="SUB_CD" />
		<result property="lecCd" column="LEC_CD" />
		<result property="proCd" column="PRO_CD" />
		<result property="lecaCate" column="LECA_CATE" />
		<result property="lecaYr" column="LECA_YR" />
		<result property="lecaSem" column="LECA_SEM" />
		<result property="lecaNm" column="LECA_NM" />
		<result property="lecaCon" column="LECA_CON" />
		<result property="lecaTrg" column="LECA_TRG" />
		<result property="lecaCrd" column="LECA_CRD" />
		<result property="lecaPer" column="LECA_PER" />
		<result property="lecaMax" column="LECA_MAX" />
		<result property="lecaRoom" column="LECA_ROOM" />
		<result property="lecaUnit" column="LECA_UNIT" />
		<result property="lecaBook" column="LECA_BOOK" />
		<result property="lecaNote" column="LECA_NOTE" />
		<result property="lecaDt" column="LECA_DT" />
		<result property="lecaGrade" column="LECA_GRADE" />
		<result property="lecaImsi" column="LECA_IMSI" />
		<result property="lecaYn" column="LECA_YN" />
		<result property="lecaTt" column="LECA_TT" />
		
		<collection property="memberVO" resultMap="memberVOMap"></collection>
		<collection property="collegeVO" resultMap="collegeVOMap"></collection>
		<collection property="departmentVO" resultMap="departmentVOMap"></collection>
		<collection property="commonDetailVO" resultMap="commonDetailVOlMap"></collection>
		<collection property="criteriaVO" resultMap="criteriaVOlMap"></collection>
	</resultMap>
		<resultMap type="memberVO" id="memberVOMap">
			<result property="memNm" column="MEM_NM"/>
			<result property="memMl" column="MEM_ML"/>
		</resultMap>
		<resultMap type="collegeVO" id="collegeVOMap">
			<result property="colNm" column="COL_NM"/>
		</resultMap>
		<resultMap type="departmentVO" id="departmentVOMap">
			<result property="depNm" column="DEP_NM"/>
			<result property="depTel" column="DEP_TEL"/>
		</resultMap>
		<resultMap type="commonDetailVO" id="commonDetailVOlMap">
			<result property="comdCd" column="COMD_CD" />
			<result property="comCd" column="COM_CD" />
			<result property="comdNm" column="COMD_NM" />
			<result property="comdCon" column="COMD_CON" />
		</resultMap>
		<resultMap type="criteriaVO" id="criteriaVOlMap">
			<result property="crtrMp" column="CRTR_MP" />
			<result property="crtrFp" column="CRTR_FP" />
			<result property="crtrTp" column="CRTR_TP" />
			<result property="crtrQp" column="CRTR_QP" />
			<result property="crtrAp" column="CRTR_AP" />
		</resultMap>
	
		<resultMap type="professorVO" id="professorMap">
		<result property="proCd" column="PRO_CD" />
		<result property="depCd" column="DEP_CD" />
		<result property="proJoin" column="PRO_JOIN" />
		<result property="proRet" column="PRO_RET" />
		<result property="proPos" column="PRO_POS" />
	</resultMap>
	<resultMap type="commonDetailVO" id="commonDetailMap">
		<result property="comdCd" column="COMD_CD" />
		<result property="comCd" column="COM_CD" />
		<result property="comdNm" column="COMD_NM" />
		<result property="comdCon" column="COMD_CON" />
	</resultMap>
	<resultMap type="departmentVO" id="departmentMap">
		<result property="depCd" column="DEP_CD" />
		<result property="colCd" column="COL_CD" />
		<result property="depNm" column="DEP_NM" />
		<result property="depMrc" column="DEP_MRC" />
		<result property="depMoc" column="DEP_MOC" />
		<result property="depCrc" column="DEP_CRC" />
		<result property="depCoc" column="DEP_COC" />
		<result property="depMax" column="DEP_MAX" />
		<result property="depTel" column="DEP_TEL" />
	</resultMap>
	<resultMap type="collegeVO" id="collegeMap">
		<result property="colNm" column="COL_NM" />
		<result property="colCrd" column="COL_CRD" />
		<result property="colFee" column="COL_FEE" />
	</resultMap>
	<sql id="where">
		<if test="year != null and !year.equals('')">
			AND L.LECA_YR = #{year}
		</if>
		<if test="sem != null and !sem.equals('')">
			AND     L.LECA_SEM = #{lecaSem}
		</if>
<!-- 		<if test="cate != null and !cate.equals('')"> -->
<!-- 			AND     L.LECA_CATE = #{lecaCate} -->
<!-- 		</if> -->
<!-- 		<if test="grade != null and !grade.equals('')"> -->
<!-- 			AND     L.LECA_GRADE = #{lecaGrade} -->
<!-- 		</if> -->
	</sql>
	<select id="proApprovalList" parameterType="int" resultType="lecApplyVO">
		SELECT  ROWNUM AS RNUM, L.LECA_CD, L.LECA_YR, L.LECA_SEM,  L.LECA_YR || '년도' AS LECA_BOOK, L.LECA_SEM || '학기' AS LECA_NOTE,
		        L.LECA_NM, L.LECA_TRG, L.LECA_CRD, L.LECA_PER, L.LECA_MAX, L.LECA_TM1, 
		        L.LECA_TM2, L.LECA_UNIT, L.LECA_DT, L.LECA_ADT,
		        L.LECA_IMSI, L.LECA_TT,
		        (SELECT MEM_NM FROM MEMBER WHERE MEM_CD = P.PRO_CD) AS PRO_NM,
		        (SELECT D.DEP_NM FROM DEPARTMENT D WHERE P.DEP_CD = D.DEP_CD) AS PRO_DEP,
		        (CASE WHEN LECA_YN = 0 THEN '승인대기'
		              WHEN LECA_YN = 1 THEN '승인'
                      WHEN LECA_YN = 2 THEN '반려'
		        END) AS LECA_CON,
		        (SELECT COMD_NM  FROM COMMON_DETAIL WHERE COMD_CD = L.LECA_CATE) AS LECA_CATE,
		        (SELECT SUB_NM FROM SUBJECT WHERE SUB_CD = L.SUB_CD) AS SUB_NM,
		        (SELECT COMD_NM FROM COMMON_DETAIL WHERE COMD_CD = L.LECA_GRADE) AS LECA_GRADE,
       		   (CASE WHEN L.LECA_GUBUN = 'AP101' THEN '강의계획서' END) AS LECA_ROOM
		FROM    LEC_APPLY L, PROFESSOR P
		WHERE   P.PRO_CD = L.PRO_CD
		AND     P.PRO_CD = #{memCd}
	</select>
	
	<select id="proApprovalSearchList" parameterType="hashMap" resultType="lecApplyVO">
		SELECT  ROWNUM AS RNUM, L.LECA_CD, L.LECA_YR, L.LECA_SEM,  L.LECA_YR || '년도' AS LECA_BOOK, L.LECA_SEM || '학기' AS LECA_NOTE,
		        L.LECA_NM, L.LECA_TRG, L.LECA_CRD, L.LECA_PER, L.LECA_MAX, L.LECA_TM1, 
		        L.LECA_TM2, L.LECA_UNIT, L.LECA_DT,
		        L.LECA_IMSI, L.LECA_TT,
		        (SELECT MEM_NM FROM MEMBER WHERE MEM_CD = P.PRO_CD) AS PRO_NM,
		        (SELECT D.DEP_NM FROM DEPARTMENT D WHERE P.DEP_CD = D.DEP_CD) AS PRO_DEP,
		        (CASE WHEN LECA_YN = 0 THEN '승인대기'
		              WHEN LECA_YN = 1 THEN '승인'
                      WHEN LECA_YN = 2 THEN '반려'
		        END) AS LECA_CON,
		        (SELECT COMD_NM  FROM COMMON_DETAIL WHERE COMD_CD = L.LECA_CATE) AS LECA_CATE,
		        (SELECT SUB_NM FROM SUBJECT WHERE SUB_CD = L.SUB_CD) AS SUB_NM,
		        (SELECT COMD_NM FROM COMMON_DETAIL WHERE COMD_CD = L.LECA_GRADE) AS LECA_GRADE,
		        A.APPR_DT,
       		   (CASE WHEN A.APPR_CATE = 2 THEN '강의계획서' END) AS LECA_ROOM
		FROM    LEC_APPLY L, PROFESSOR P, APPROVAL A
		WHERE   P.PRO_CD = L.PRO_CD
		AND     A.APPR_MEM = L.LECA_CD
		AND     P.PRO_CD = #{memCd}
		<include refid="where"></include>
		ORDER BY LECA_DT DESC
	</select>
	
	<select id="proApprovalPdf" parameterType="hashMap" resultType="lecApplyVO">
		SELECT  ROWNUM AS RNUM, L.LECA_CD, L.LECA_YR, L.LECA_SEM,  L.LECA_YR || '년도' AS LECA_BOOK, L.LECA_SEM || '학기' AS LECA_NOTE,
		        L.LECA_NM, L.LECA_TRG, L.LECA_CRD, L.LECA_PER, L.LECA_MAX, L.LECA_TM1, 
		        L.LECA_TM2, L.LECA_UNIT, L.LECA_DT, L.LECA_ADT,
		        L.LECA_IMSI, L.LECA_TT,
		        (SELECT MEM_NM FROM MEMBER WHERE MEM_CD = P.PRO_CD) AS PRO_NM,
		        (SELECT D.DEP_NM FROM DEPARTMENT D WHERE P.DEP_CD = D.DEP_CD) AS PRO_DEP,
		        (CASE WHEN LECA_YN = 0 THEN '승인대기'
		              WHEN LECA_YN = 1 THEN '승인'
                      WHEN LECA_YN = 2 THEN '반려'
		        END) AS LECA_CON,
		        (SELECT COMD_NM  FROM COMMON_DETAIL WHERE COMD_CD = L.LECA_CATE) AS LECA_CATE,
		        (SELECT SUB_NM FROM SUBJECT WHERE SUB_CD = L.SUB_CD) AS SUB_NM,
		        (SELECT COMD_NM FROM COMMON_DETAIL WHERE COMD_CD = L.LECA_GRADE) AS LECA_GRADE,
       		   (CASE WHEN L.LECA_GUBUN = 'AP101' THEN '강의계획서' END) AS LECA_ROOM
		FROM    LEC_APPLY L, PROFESSOR P
		WHERE   P.PRO_CD = L.PRO_CD
		AND     L.LECA_CD = #{lecaCd}
		ORDER BY LECA_DT DESC
	</select>
	
	<select id="returnHistory" parameterType="int" resultType="lecApplyVO">
		SELECT L.SUB_CD, L.PRO_CD, (SELECT COMD_NM FROM COMMON_DETAIL WHERE L.LECA_CATE = COMD_CD)AS LECA_CATE, L.LECA_YR || '년도' AS LECA_BOOK, L.LECA_SEM || '학기' AS LECA_NOTE, L.LECA_NM,
		        L.LECA_DT, (CASE WHEN LECA_YN = 2 THEN '반려' END) AS LECA_CON, L.LECA_ADT, L.LECA_GUBUN, L.LECA_RSN AS apprRsn
		FROM    LEC_APPLY L
		WHERE   PRO_CD = #{memCd}
        AND     LECA_YN = 2
	</select>
	
	<select id="getLecApply" parameterType="hashMap" resultMap="lecApplyMap">
		SELECT  U.LECA_CD, U.LECA_CATE, U.LECA_YR, U.LECA_SEM, U.LECA_NM, U.SUB_CD,
		        NVL(U.LECA_CON, '등록된 설명이 없습니다.') LECA_CON,
		        U.LECA_TRG, U.LECA_CRD, U.LECA_PER, U.LECA_MAX,
		        NVL(U.LECA_ROOM, '지정된 건물이 없습니다.') LECA_ROOM,
		        U.LECA_UNIT,
		        NVL(U.LECA_BOOK, '등록된 교재가 없습니다.') LECA_BOOK,
		        U.LECA_NOTE, U.LECA_DT,
		        U.LECA_IMSI, U.LECA_YN, U.LEC_CD,  U.SUB_CD,
		        (SELECT COMD_NM FROM COMMON_DETAIL WHERE COMD_CD = U.LECA_GRADE) COMD_NM,
		        U.PRO_CD, U.MEM_NM, U.MEM_ML,
		        U.COL_NM, U.DEP_NM, U.DEP_TEL,
		        NVL(U.CRTR_MP,0) AS CRTR_MP, NVL(U.CRTR_FP,0) AS CRTR_FP, NVL(U.CRTR_TP,0) AS CRTR_TP, NVL(U.CRTR_QP,0) AS CRTR_QP, NVL(U.CRTR_AP,0) AS CRTR_AP,
		        NVL(TRIM(U.MON 
		           || ' ' || U.TUE 
		           || ' ' || U.WED 
		           || ' ' || U.THU
		           || ' ' || U.FRI), ' - ') LECA_TT
		FROM (
			    SELECT  LECA_CD, SUB_CD, LEC_CD, PRO_CD, LECA_CATE,
			            LECA_YR, LECA_SEM, LECA_NM, LECA_CON, LECA_TRG,
			            LECA_CRD, LECA_PER, LECA_MAX, LECA_ROOM, LECA_UNIT,
			            LECA_NOTE, LECA_BOOK, LECA_DT, LECA_IMSI, LECA_YN,
			            MEM_NM, COL_NM, DEP_NM, MEM_ML, DEP_TEL,
			            LECA_GRADE, CRTR_MP, CRTR_FP, CRTR_TP, CRTR_QP, CRTR_AP,
			            MAX(MON) MON, MAX(TUE) TUE, MAX(WED) WED, MAX(THU) THU, MAX(FRI) FRI
			    FROM VW_SUOMI
			    GROUP BY LECA_CD, SUB_CD, LEC_CD, PRO_CD, LECA_CATE,
			            LECA_YR, LECA_SEM, LECA_NM, LECA_CON, LECA_TRG,
			            LECA_CRD, LECA_PER, LECA_MAX, LECA_ROOM, LECA_UNIT,
			            LECA_NOTE, LECA_BOOK, LECA_DT, LECA_IMSI, LECA_YN,
			            MEM_NM, COL_NM, DEP_NM, MEM_ML, DEP_TEL,
			            LECA_GRADE, CRTR_MP, CRTR_FP, CRTR_TP, CRTR_QP, CRTR_AP
		) U
		WHERE U.LECA_CD = #{lecCd}
	</select>
	
	<!-- 강의 > 수업계획서 > 주차별 강의 내용 조회 -->
<!-- 			AND U.lecaNote LIKE '%' || #{lecaNote} || '%' -->
<!-- 			AND U.lecaNm LIKE '%' || #{lecaNm} || '%' -->
	<select id="getWeekPlan" parameterType="int" resultType="weekplanVO">
		SELECT  W.WP_NO
		    ,   W.WP_CON
		FROM WEEKPLAN W, LEC_APPLY LA
		WHERE W.LECA_CD = LA.LECA_CD
		AND   W.LECA_CD = #{lecaCd}
	</select>
	
	<!-- 학사관리자 전체 결재 목록 조회 -->
	<sql id="uwhere">
		<if test="lecaNote != null and !lecaNote.equals('')">
			AND U.lecaNote LIKE '%' || #{lecaNote} || '%' 
		</if>
		<if test="lecaNm != null and !lecaNm.equals('')">
			AND U.lecaNm LIKE '%' || #{lecaNm} || '%'
		</if>
		<if test="(lecaDt != null and !lecaDt.equals('')) and (value != null and !value.equals(''))">
			AND ${value} BETWEEN to_date(#{lecaDt}, 'YYYY-MM-DD') AND to_date(#{lecaAdt}, 'YYYY-MM-DD')
		</if>
	</sql>
	<select id="managerApprovalList" parameterType="hashMap" resultType="lecApplyVO">
		WITH U AS(
		SELECT L.LECA_DT AS lecaDt, NVL(TO_CHAR(TO_DATE(L.LECA_ADT,'YYYY-MM-DD')), '-') AS lecaAdt ,
		        (CASE WHEN L.LECA_YN = 0 THEN '승인대기'
				              WHEN L.LECA_YN = 1 THEN '승인'
		                      WHEN L.LECA_YN = 2 THEN '반려'
				        END) AS lecaCon, L.LECA_RSN AS lecaRsn, (SELECT COMD_NM  FROM COMMON_DETAIL WHERE COMD_CD = L.LECA_GUBUN) AS lecaBook,
		        (SELECT MEM_NM FROM MEMBER WHERE L.PRO_CD = MEM_CD) AS lecaNote,
		        (SELECT D.DEP_NM FROM DEPARTMENT D, PROFESSOR P WHERE P.DEP_CD = D.DEP_CD AND L.PRO_CD = P.PRO_CD) AS lecaTt,
		        NVL((SELECT MEM_NM FROM MEMBER WHERE L.MGR_CD = MEM_CD), '-') AS lecaNm,
		        NVL((SELECT C.COMD_NM FROM COMMON_DETAIL C, MANAGER M WHERE C.COMD_CD = M.MGR_DIV AND M.MGR_CD = L.MGR_CD), '-') AS lecaRoom
		FROM LEC_APPLY L
		UNION ALL 
		SELECT SCLH_DT AS lecaDt, NVL(TO_CHAR(TO_DATE(S.SCLH_ADT,'YYYY-MM-DD')), '-') AS lecaAdt ,(CASE WHEN SCLH_YN = 0 THEN '승인대기'
				              WHEN SCLH_YN = 1 THEN '승인'
		                      WHEN SCLH_YN = 2 THEN '반려'
				        END) AS lecaCon, SCLH_RSN AS lecaRsn , (SELECT COMD_NM  FROM COMMON_DETAIL WHERE COMD_CD = S.SCLH_GUBUN) AS lecaGubun,
                (SELECT MEM_NM FROM MEMBER WHERE S.MEM_CD = MEM_CD) AS lecaNote,
                (SELECT D.DEP_NM FROM DEPARTMENT D, PROFESSOR P WHERE P.DEP_CD = D.DEP_CD AND S.MEM_CD = P.PRO_CD) AS lecaTt,
                NVL((SELECT MEM_NM FROM MEMBER WHERE S.MGR_CD = MEM_CD), '-') AS lecaNm,
                NVL((SELECT C.COMD_NM FROM COMMON_DETAIL C, MANAGER M WHERE C.COMD_CD = M.MGR_DIV AND M.MGR_CD = S.MGR_CD), '-') AS lecaRoom
		FROM SCL_HISTORY S
		WHERE S.SCL_CD = 3
		)
		SELECT U.*
		FROM U
		WHERE 1 = 1
		<include refid="uwhere"></include>
		ORDER BY U.LECACON DESC
	</select>
	
	<!-- 날짜 계산 SQL -->
	<select id="dateCal" resultType="hashMap" parameterType="String">
		SELECT TO_CHAR(SYSDATE-1,'yyyy-mm-dd') AS day
		, TO_CHAR(SYSDATE-7,'yyyy-mm-dd') AS week
		, TO_CHAR(ADD_MONTHS(SYSDATE,-1),'yyyy-mm-dd') AS month
		, TO_CHAR(ADD_MONTHS(SYSDATE,-12),'yyyy-mm-dd') AS year
		FROM DUAL
	</select>
	
	<!-- 학사관리자 강의계획서 결재 리스트 -->
	<select id="mgrLecApprovalList" resultType="lecApplyVO">
		WITH U AS(
				SELECT L.LECA_SEM, L.LECA_YR, L.LECA_DT AS lecaDt, NVL(TO_CHAR(L.LECA_ADT,'YYYY-MM-DD'), '-') AS lecaAdt , LECA_CD, PRO_CD,
				        (CASE WHEN L.LECA_YN = 0 THEN '승인대기'
						              WHEN L.LECA_YN = 1 THEN '승인'
				                      WHEN L.LECA_YN = 2 THEN '반려'
						        END) AS lecaCon, L.LECA_RSN AS lecaRsn, (SELECT COMD_NM  FROM COMMON_DETAIL WHERE COMD_CD = L.LECA_GUBUN) AS lecaBook,
				        (SELECT MEM_NM FROM MEMBER WHERE L.PRO_CD = MEM_CD) AS lecaNote,
				        (SELECT D.DEP_NM FROM DEPARTMENT D, PROFESSOR P WHERE P.DEP_CD = D.DEP_CD AND L.PRO_CD = P.PRO_CD) AS lecaTt,
				        NVL((SELECT MEM_NM FROM MEMBER WHERE L.MGR_CD = MEM_CD), '-') AS lecaNm,
				         NVL((SELECT C.COMD_NM FROM COMMON_DETAIL C, MANAGER M WHERE C.COMD_CD = M.MGR_DIV AND M.MGR_CD = L.MGR_CD), '-') AS lecaRoom
				FROM LEC_APPLY L
		)
		SELECT U.*
		FROM U
		WHERE 1 = 1
		AND U.lecaNote IN('전교수', '김교수', '이교수', '임교수')
		ORDER BY U.lecaDt DESC
	</select>
	
	<!-- 학사관리자 강의계획서 결재 중 반려사유 update -->
	<update id="lecApplyNoUpdate" parameterType="hashMap">
		UPDATE LEC_APPLY 
		SET LECA_YN = 2,
		    MGR_CD = #{mgrCd},
		    LECA_ADT = SYSDATE,
		    LECA_RSN = #{lecaRsn}
		WHERE LECA_CD = #{lecaCd}
	</update>
	
	<!-- 강의실 배정 중 단과대 건물명 리스트 출력 -->
	<select id="buildingList" resultType="buildingVO">
		SELECT BLD_CD, COL_CD, BLD_NM, BLD_SNM FROM BUILDING
	</select>
	
	<!-- 강의실 배정 중 단과대 별 호실 리스트 출력-->
	<select id="roomList" parameterType="String" resultType="roomVO">
		SELECT R.ROOM_CD, R.BLD_CD, R.ROOM_NO, R.ROOM_MAX 
		FROM ROOM R
		WHERE R.BLD_CD = (SELECT B.BLD_CD FROM BUILDING B WHERE B.BLD_NM = #{bldNm})
	</select>
	
</mapper>