package kr.ac.lms.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.json.simple.JSONObject;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.ac.lms.mapper.ApprovalMapper;
import kr.ac.lms.service.ApprovalService;
import kr.ac.lms.service.ProfessorLectureService;
import kr.ac.lms.vo.ApprovalVO;
import kr.ac.lms.vo.BuildingVO;
import kr.ac.lms.vo.LecApplyVO;
import kr.ac.lms.vo.LectureVO;
import kr.ac.lms.vo.MemberVO;
import kr.ac.lms.vo.RoomVO;
import kr.ac.lms.vo.WeekplanVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/approval")
public class ApprovalController {
	
	@Inject
	ApprovalService apprivalService;
	
	@GetMapping("/list")
	public String list(Model model, HttpServletRequest request) {
		HttpSession session = request.getSession();
		
		MemberVO memberVO = (MemberVO)session.getAttribute("memSession");
		int memCd = memberVO.getMemCd();
		
		model.addAttribute("memCd", memCd);
		return "approval/proApprovalList";
	}
	
	@ResponseBody
	@GetMapping("/proApprovalList")
	public List<LecApplyVO> proApprovalList(Model model,  HttpServletRequest request) {
		HttpSession session = request.getSession();
		
		MemberVO memberVO = (MemberVO)session.getAttribute("memSession");
		int memCd = memberVO.getMemCd();
		log.info("proApprovalList에 왔다!");
		
		List<LecApplyVO> proApprovalList = this.apprivalService.proApprovalList(memCd);
		log.info("proApprovalList : " + proApprovalList);
		
		model.addAttribute("data", proApprovalList);
		
		return proApprovalList;
	}
	
	@ResponseBody
	@PostMapping("/searchList")
	public List<LecApplyVO> searchList(@RequestBody Map<String, Object> map){
		log.info("searchList Map : " + map);
		
		List<LecApplyVO> list = this.apprivalService.proApprovalSearchList(map);

		
		return list;
	}
	
	
	@ResponseBody
	@PostMapping("/lecApplyPdf")
	public LecApplyVO lecApplyPdf(@RequestBody Map<String, Object> map, Model model) {
		log.info("강의계획서 pdf에 왔따!");
		
		log.info("lecaCd : " + map);
		
		LecApplyVO lecApproVO = this.apprivalService.proApprovalPdf(map);
		log.info("lecApproVO : " + lecApproVO);
		
		model.addAttribute("data", lecApproVO);
		
		return lecApproVO;
		
	}
	
	@GetMapping("/lecApproPdfGet/{lecaCd}")
	public String lecApproPdfGet(@PathVariable("lecaCd") int lecaCd, Map<String, Object> map, Model model,
			HttpServletRequest request) {
		log.info("lecApproPdfGet에 왔따!");

		log.info("제발 나와줘 lecaCd : " + lecaCd);

		HttpSession session = request.getSession();

		MemberVO memberVO = (MemberVO) session.getAttribute("memSession");
		int memCd = memberVO.getMemCd();

		Map<String, Object> lecApply = new HashMap<String, Object>();

		lecApply.put("proCd", memCd);
		lecApply.put("lecCd", lecaCd);
		log.info("lecApply는? : " + lecApply);

		LecApplyVO lec = this.apprivalService.getLecApply(lecApply);
		log.info("lec : " + lec);

		List<WeekplanVO> wee = this.apprivalService.getWeekPlan(lecaCd);

		model.addAttribute("data", lec);
		model.addAttribute("week", wee);

		return "approval/proApprovalPdf";
	}
	
	//반려내역 가져오기
	@ResponseBody
	@PostMapping("/returnHistory")
	public List<LecApplyVO> returnHistory(HttpServletRequest request) {
		HttpSession session = request.getSession();
		
		MemberVO memberVO = (MemberVO)session.getAttribute("memSession");
		int memCd = memberVO.getMemCd();
		
		List<LecApplyVO> list = this.apprivalService.returnHistory(memCd);
		log.info("반려내역 list : " + list);
		log.info("반려내역 list size() : " + list.size());
		
		
		log.info("returnHistory에 왔다!");
		
		return list;
	}
	
	//학사관리자 결재 Get
	@GetMapping("/managerApprovalListGet")
	public String managerApprovalListGet(){
		
		return "approval/managerApprovalList";
	}
	
	//학사관리자 전체 결재목록 조회
	@ResponseBody
	@GetMapping("/mgrApprovalList")
	public List<LecApplyVO> mgrApprovalList(){
		Map<String, String> map = new HashMap<String, String>();
		
		List<LecApplyVO> approvalList = this.apprivalService.managerApprovalList(map);
		log.info("approvalList : " + approvalList);
		
		return approvalList;
		
	}
	
	//날짜 계산
	@ResponseBody
	@PostMapping("/dateCal")
	public Map<String, Object> dateCal(@RequestBody Map<String, Object> map){
		
		Map<String, Object> maps = this.apprivalService.dateCal();
		log.info(maps + "");
		
		return maps;
	}
	
	@ResponseBody
	@PostMapping("/mgrApprovalListAgain")
	public List<LecApplyVO> mgrApprovalListAgain(@RequestBody Map<String, String> map){
		log.info("mgrApprovalListAgain Map : " + map);
		
		List<LecApplyVO> list = this.apprivalService.managerApprovalList(map);
		log.info("제발나와줘 list : " + list);
		log.info("제발나와줘 list.size() : " + list.size());
		
		return list;
	}
	
	@GetMapping("/mgrlecApproval")
	public String mgrlecApproval() {
		log.info("mgrlecApproval에 왔다!");
		
		return "approval/mgrLecApproval";
	}
	
	@ResponseBody
	@PostMapping("/mgrLecApprovalList")
	public List<LecApplyVO> mgrLecApprovalList(){
		List<LecApplyVO> list = this.apprivalService.mgrLecApprovalList();
		log.info("mgrLecApprovalList : " + list);
		
		return list;
	}
	
	//학사관리자 강의계획서 보기
	@GetMapping("/lecApproPdfGetMgr/{lecaCd}/{proCd}")
	public String lecApproPdfGetMgr(@PathVariable("lecaCd") int lecaCd, @PathVariable("proCd") int proCd, Map<String, Object> map, Model model,
			HttpServletRequest request) {

		Map<String, Object> lecApply = new HashMap<String, Object>();

		lecApply.put("proCd", proCd);
		lecApply.put("lecCd", lecaCd);
		log.info("lecApply는? : " + lecApply);

		LecApplyVO lec = this.apprivalService.getLecApply(lecApply);
		log.info("lec : " + lec);

		List<WeekplanVO> wee = this.apprivalService.getWeekPlan(lecaCd);

		model.addAttribute("data", lec);
		model.addAttribute("week", wee);

		return "approval/proApprovalPdf";
	}
	
	@ResponseBody
	@PostMapping("/lecApplyView")
	public Map<String, Object> lecApplyView(@RequestBody Map<String, Object> map, Model model, HttpServletRequest request) {
		HttpSession session = request.getSession();
		
		MemberVO memberVO = (MemberVO)session.getAttribute("memSession");
		int memCd = memberVO.getMemCd();
		log.info("lecApplyView memCd : " + memCd);
		
//		model.addAttribute("memCd", memCd);
		
		log.info("lecApplyView Map : " + map);
		
		LecApplyVO lec = this.apprivalService.getLecApply(map);
		List<WeekplanVO> wee = this.apprivalService.getWeekPlan((Integer) map.get("lecCd"));
		
		log.info("lecApplyView lec : " + lec);
		log.info("lecApplyView wee : " + wee);
		
		Map<String, Object> maps = new HashMap<String, Object>();
		
		maps.put("memCd", memCd);
		maps.put("lec", lec);
		maps.put("wee", wee);
		
		model.addAttribute("data", lec);
		model.addAttribute("week", wee);
		
		return maps;
	}
	
	//반려사유 update
	@ResponseBody
	@PostMapping("/approvalNo")
	public int approvalNo(@RequestBody Map<String, Object> map) {
		log.info("approvalNo Map : " + map);
		
		int cnt = this.apprivalService.lecApplyNoUpdate(map);
		
		return cnt;
	}
	
	@GetMapping("/lecaRoomAssignGet/{lecaCd}")
	public String lecaRoomAssignGet(Model model) {
		log.info("lecaRoomAssignGet에 왔따");
		
		return "approval/lecaRoomAssign";
	}
	
	@ResponseBody
	@PostMapping("/buildingList")
	public List<BuildingVO> buildingList() {
		
		List<BuildingVO> list = this.apprivalService.buildingList();
		log.info("buildingList list : " + list);
		
		return list;
	}
	
	@ResponseBody
	@PostMapping("/lecaRoomListPost")
	public List<RoomVO> lecaRoomListPost(@RequestBody Map<String, Object> map) {
		List<RoomVO> list = this.apprivalService.roomList((String) map.get("bldNm"));
		log.info("lecaRoomListPost List : " + list);
		
		return list;
	}
	
}
