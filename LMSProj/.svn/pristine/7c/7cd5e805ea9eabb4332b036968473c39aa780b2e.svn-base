<%@page import="kr.ac.lms.vo.MemberVO"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
	MemberVO memberVO = (MemberVO)session.getAttribute("memSession");
%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>수강신청</title>
<script src="https://cdn.jsdelivr.net/npm/sockjs-client@1/dist/sockjs.min.js"></script>
<script type="text/javascript" src="/resources/js/tui-grid.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
<link rel="stylesheet" href="/resources/css/tui-grid.css" type="text/css">
<style type="text/css">
	#personalInfo, #courseInfo {
		border : 1px solid lightgray;
		margin : 10px;
		padding : 10px;
	}
	label {
		margin : 10px;
	}
	#beRed {
		color : rgb(225, 39, 64);
		font-weight : bold;
	}
	.pregisterCnt {
		display : inline-block;
		width : 100px;
		padding-left : 15px;
	}	
</style>
</head>
<script type="text/javascript">
	
	var socket = null;
	var grid;
	var grid1;
	
	$(document).ready(function() {
		
		if(${sessionScope.memSession.memCd != null}) {
			//소켓 객체 생성 후 전역변수에 담음
			var soc = new SockJS("/alram");
			socket = soc;
			
			//소켓 연결 함수
			soc.onopen = function() {
				var msg = "${sessionScope.sessionId.name}님이 접속했습니다,all";
				socket.send(msg);
			};
			
			//메시지 수신 함수
			soc.onmessage = function(data) {
				console.log(data.data);
			};
		}
		
		//개인정보 가져오기
		$.ajax({
			url : "/pregister/getInfo",
			type : "POST",
			dataType : "JSON",
			success : function(res) {
				//console.log(res);
				
				$('#college').val(res.depNm);
				$('#credit').val(res.stuMrc);
				$('#myCredit').val(res.stuMoc);
				$('#yrNsem').val(res.stuYr + "학년 (" + res.stuSem + "학기)");
			}
		});
		
		//개설학과 불러오기
		$.ajax({
			url : "/course/department",
			type : "GET",
			dataType : "JSON",
			success : function(res) {
				str = '';
				
				$.each(res, function(i, v) {
					str += '<option value="' + v + '">' + v + '</option>';
				});
				
				$('#department').append(str);
			}
		});
		
		//과목번호 및 과목명 입력 후 엔터키를 눌러도 조회 버튼 클릭으로 연결됨
		var inputSubject = document.getElementById("subject");
		
		inputSubject.addEventListener("keyup", function(event) {
	      if(event.keyCode === 13) {
	        event.preventDefault();
	        document.getElementById("btn2GetList").click();
	      }
	    });
		
		//전체 리스트 가져오기, 장바구니에 담은 과목이 상단에 위치
		$.ajax({
			url : "/register/getList",
			type : 'GET',
			dataType : 'JSON',
			success : function(res) {

				//장바구니 있는 강의 lecaYn = 1, 없는 강의 lecaYn = 2
				$.each(res, function(i, v) {
					if(v.lecaYn == 1) {
						res[i]['btn'] = '<button>확정하기</button>';
					}else {
						res[i]['btn'] = '<button>신청하기</button>';
					}
					res[i]['btnPdf'] = '<button class="btn btn-outline-secondary btn-sm" onclick="getSyllabus(' + v.lecaCd + ',' + v.lecCd + ')">강의계획서</button>';
				});
				
				grid = new tui.Grid({
					el : document.getElementById('grid'),
					data : res,
					scrollX : true,
					scrollY : true,
					bodyHeight: 250,
					columns : [
						{header : '수강신청', name : 'btn', width : 100, align : 'center'},
						{header : '개설학과', name : 'lecaCon', filter : 'select', width : 200, align : 'center'},
						{header : '학년', name : 'lecaTrg', filter : 'select', width : 70, align : 'center'},
						{header : '과목번호', name : 'subCd', filter : 'select', width : 120, align : 'center'},
						{header : '과목명', name : 'lecaNm', filter : 'select'},
						{header : '제한인원', name : 'lecaMax', width : 70, align : 'center'},
						{header : '수강인원', name : 'lecaUnit', width : 70, align : 'center'},
						{header : '개설이수구분', name : 'lecaCate', width :100, align : 'center'},
						{header : '학점', name : 'lecaCrd', width : 50, align : 'center'},
						{header : '강의시간/강의실', name : 'lecaTt'},
						{header : '담당교수', name : 'proNm', width : 100, align : 'center'},
						{header : '성적평가방식', name : 'lecaGrade', width : 100, align : 'center'},
						{header : '강의계획서', name : 'btnPdf', width : 100, align : 'center'}
					],
					columnOptions: {
				        resizable: true
				    }
				});
			}
		});
	});
</script>
<body>
<div style="width:94%; margin-left:12.5%; margin-right:auto;">
	<div id="personalInfo">
		<label>단과대학/전공
			<input type="text" name="college" id="college" readonly="readonly">
		</label>
		<label>기준학점
			<input type="text" name="credit" id="credit" readonly="readonly">
		</label>
		<label>신청가능학점
			<input type="text" name="myCredit" id="myCredit" readonly="readonly">
		</label>
		<label>수강신청학년(학기)
			<input type="text" name="yrNsem" id="yrNsem" readonly="readonly">
		</label>
	</div>
	
	<div id="courseInfo">
	<label>년도
		<select name="year" id="year">
			<option value="${map.YEAR}" selected>${map.YEAR}</option>
		</select>
	</label>
	<label>학기
		<select name="semester" id="semester">
			<option value="${map.SEMESTER}" selected>${map.SEMESTER}학기</option>
		</select>
	</label>
	<br><br>
	<label>학과전공
		<select name="department" id="department">
			<option value="">전체</option>
		</select>
	</label>
	<label>이수구분
		<select name="category" id="category">
			<option value="">전체</option>
			<option value="전필">전공필수(전필)</option>
			<option value="전선">전공선택(전선)</option>
			<option value="교필">교양필수(교필)</option>
			<option value="교선">교양선택(교선)</option>
		</select>
	</label>
	<br><br>
	<label>과목번호/명
			<input type="text" name="subject" id="subject"> 미입력시 전체 조회
	</label>
	<button type="button" id="btn2GetList">조회</button>
	</div>
	
	<br><br>
	
	<b>[개설강좌]</b>
	&emsp;
	<span id="beRed">▶ 본 화면은 예비 수강신청 화면입니다. 실제 수강신청 확정은 수강신청 화면에서 이루어집니다.</span>
	<br><br>
	<div id="grid"></div>
</div>
</body>
</html>