<button> 의 기본 스타일 눈여겨보기
display 는 inline block
boxsizing order-box


background color 의 기본 값 transparent
투명색 = transparent

button 요소에 기본적으로 설정되는 스타일 속성 제거
background-color : transparent
border : none;
padding: 0;
cursor : pointer;

<button><button> 내부 문자는 무조건 넣어야 함(벌금) 웹 접근성 때문 ( 장애인 포함)

<button><span 인라인의 영역을 잡아주는 애>toggle menu<span><button>

->> #toggle > span { display : none; }



--------------------------------------------------------
16일차
<가변 폭 레이아웃>
fluid layout
폭이 변한다.
모든 영역의 너비가 브라우저 화면의 전체 너비를 차지
본문 영역이 브라우저 화면 너비에 따라 변화
테블릿 pc 에 적합한 레이아웃
많은 정보들을 보여주기 위해 쓰임

sidebar는 뷰포트의 너비에 상관없이 크기가 변하면안됨

width : calc(100% - 200px); 브라우저가 알아서 계산함
문제-> calc 함수를 지원하는 브라우저 버전이 다르기 때문에 9.0이하 버전의 브라우저는 먹히지 않음


가변 폭 레이아웃
#content 영역의 너비를 (100%-#sidebar 영역의 너비)만큼 설정해서 브라우저 화면(viewport)의 너비에 상관없이 #sidebar 영역과 #content 영역의 너비를 합쳐서 브라우저 화면의 너비만큼 되도록 하는 레이아웃

가변 폭 레이아웃 설정
1. #content 영역의 너비를 (100%-#sidebar 영역의 너비)만큼 설정하기 위해 #wrap 요소 추가
2. #sidebar 영역과 #wrap 요소를 나란히 배치
3. 일반적으로 #sidebar 영역의 너비는 고정
4. #content 영역의 너비를 (100%-#sidebar 영역의 너비)만큼 설정하기 위해 #wrap 요소의 너비는 강제로 100%로 설정
5. #sidebar 영역과 #wrap 요소를 나란히 배치하기 위해 #wrap 요소를 #sidebar 영역의 너비만큼 화면 오른쪽 바깥으로 밀어낸다.
6. #wrap 요소의 영역이 화면 오른쪽 바깥으로 밀려난 상태에서는 콘텐츠도 화면 바깥쪽으로 밀려나가므로 이를 방지하기 위해 #wrap 요소를 화면 바깥쪽으로 밀어낸 너비만큼 #content 화면 안쪽으로 끌어당긴다.
7. #wrap 요소가 화면 오른쪽 바깥으로 밀러나서 화면 아래에 스크롤 바가 만들어진다. 이 스크롤 바를 없애고 #wrap 요소가 화면 오른쪽 바깥으로 밀려난 영역을 숨긴다.
8. 부가적으로 모든 자식 요소가 float 스타일 속성이 적용되어 부모 요소의 영역을 잡아주기 위해 추가한 가상 요소는 부모 요소에 overflow 스타일 속성이 적용되었으므로 추가하지 않아도 된다













































