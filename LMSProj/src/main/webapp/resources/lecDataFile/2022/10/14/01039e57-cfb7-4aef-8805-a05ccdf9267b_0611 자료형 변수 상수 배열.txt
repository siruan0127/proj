2일차
자료형과 변수, 상수

프로그램에서는 값을 어떻게 다룰것인가가 중요함

자료형(data type)
프로그램에서 다루는 값들의 종류
자료형에 따라 프로그램에서 값을 다루는 방법이 달라진다.

string 문자열
number 숫자(정수, 실수)
boolean 불린 (참, 거짓)
function 함수
object 객체
undefined 선언되지 않았거나 할당되지 않은 값


-문자열(string)
문자들의 집합을 나타내는 자료형
작은따옴표로 묶어서 표현 'hello world'
큰따옴표로 묶어서 표현 "hello world"
일괄되게 따옴표를 쓰는 것이 좋다
javascript 에서 가장 많이 다루는 자료형

->문자열 연결 : 연결 연산자(+)로 문자열을 연결

자료형이 다른 경우 연산할 수 없다.
따라서 자료형이 다른 값을 연산할 때는 두 값의 자료형을 같도록 맞춘다.


제어문자(escape character)
문자열에서 특수한 기능을 수행하는 문자
일반적인 문자로는 표현할 수 없는 문자를 표현
\n 개행(new line)
\t 수평 탭(tap)
\' 작은따옴표
\" 큰따옴표
\\ 백슬래시(backslash)


undefined 자료형

자료형 검사
typeof 연산자를 이용해 값의 자료형을 확인



-변수와 상수

상수(constant)
변하지 않는 값

변수(bariable)
변하는 값
값을 저장하기 위한 저장 공간
지정한 값을 "대입"을 통해 저장할 수 있다.
1. 값을 저장할 저장공간부터 만든다
    (변수를 선언한다) var
	var x; ->x라는 이름의 저장공간이 생성이됨
	x = 2; -> =대입연산자 

	var x = 2; 변수 x를 선언하고 2로 초기화한다.

변수의 선언
어떤 값을 저장하기 위해 저장 공간을 할당하고 식별자를 붙이는 것 var

변수에 값을 대입
선언해 놓은 변수에 값을 저장하는 것

변수의 초기화
변수를 선언하면서 동시에 값을 대입하는 것

변수의 역할
기억하기 어려운 값을 기억하기 쉬운 이름으로 저장

writeln 메서드
document.writeln <-지정한 값 출력하고 마지막 개행 문자를 덧붙여주는 기능

---------------------------------------------------------

배열(array) : 변수들의 집합. 자료형은 객체

값을 저장했다가 나중에 써먹으려고 변수를 씀

배열에 포함되어 있는 각각의 저장공간들 = 원소(item)
원소들에는 번호가 붙는다 = 인덱스(index)
인덱스를 통해 접근
배열에서 원소들의 개수 = 배열의 크기(length)

배열을 만들기 위해
var favorites = ["원소0", "원소1", "원소2" ];	 
		배열 리터럴(literal) 

favorites[0]
여기서 []는 인덱스연산자

<배열 정리>
배열
같은 유형의 여러 값들을 저장할 수 있는 저장공단들의 집합(묶음
배열 리터럴[]을 이용해서 생성

배열의 원소
배열에서 값을 저장하는 각각의 저장공간

배열의 인덱스
배열의 각 저장공간, 즉 원소에 접근할 때 사용하는 정수
0부터 시작해서 1씩 증가

배열의 크기
배열에서 원소들의 개수














